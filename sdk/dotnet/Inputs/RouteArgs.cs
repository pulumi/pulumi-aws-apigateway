// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsApiGateway.Inputs
{

    /// <summary>
    /// A route that that APIGateway should accept and forward to some type of destination. All routes
    /// have an incoming path that they match against.  However, destinations are determined by the kind
    /// of the route.
    /// </summary>
    public sealed class RouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, an API key will be required for this route. The source for the API Key can be set at
        /// the API level and by default, the source will be the HEADER.
        /// </summary>
        [Input("apiKeyRequired")]
        public bool? ApiKeyRequired { get; set; }

        [Input("authorizers")]
        private List<Inputs.AuthorizerArgs>? _authorizers;

        /// <summary>
        /// Authorizers allows you to define Lambda authorizers be applied for authorization when the
        /// the route is called.
        /// </summary>
        public List<Inputs.AuthorizerArgs> Authorizers
        {
            get => _authorizers ?? (_authorizers = new List<Inputs.AuthorizerArgs>());
            set => _authorizers = value;
        }

        /// <summary>
        /// The `content-type` to serve the file as.  Only valid when `localPath` points to a file.  If
        /// `localPath` points to a directory, the content types for all files will be inferred.
        /// </summary>
        [Input("contentType")]
        public string? ContentType { get; set; }

        /// <summary>
        /// A raw Swagger object to include verbatim in the integration for this path.
        /// </summary>
        [Input("data")]
        public object? Data { get; set; }

        /// <summary>
        /// A Lambda function which will handle the route for the given path and method.
        /// </summary>
        [Input("eventHandler")]
        public Input<Pulumi.Aws.Lambda.Function>? EventHandler { get; set; }

        /// <summary>
        /// By default, the route method auth type is set to `NONE`. If true, the auth type will be
        /// set to `AWS_IAM`.
        /// </summary>
        [Input("iamAuthEnabled")]
        public bool? IamAuthEnabled { get; set; }

        /// <summary>
        /// By default a `localPath` hosting static content will also serve 'index.html' in response to a request on a directory.
        /// To disable this pass `false` or supply a new index document name.
        /// </summary>
        [Input("index")]
        public Union<string, bool>? Index { get; set; }

        /// <summary>
        /// The local path on disk to create static S3 resources for.  Files will be uploaded into S3
        /// objects, and directories will be recursively walked into.
        /// </summary>
        [Input("localPath")]
        public string? LocalPath { get; set; }

        /// <summary>
        /// The REST method of the route to match.  Only valid with `eventHandler` or `data` routes.
        /// </summary>
        [Input("method")]
        public Pulumi.AwsApiGateway.Method? Method { get; set; }

        /// <summary>
        /// The path on the API that will serve this route.  If not prefixed with `/`,
        /// then a `/` will be added automatically to the beginning.
        /// </summary>
        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        /// <summary>
        /// Request Validator specifies the validator to use at the method level. This will override anything
        /// defined at the API level.
        /// </summary>
        [Input("requestValidator")]
        public Pulumi.AwsApiGateway.RequestValidator? RequestValidator { get; set; }

        [Input("requiredParameters")]
        private List<Inputs.RequiredParameterArgs>? _requiredParameters;

        /// <summary>
        /// Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
        /// gateway will validate these before sending traffic to the event handler.
        /// </summary>
        public List<Inputs.RequiredParameterArgs> RequiredParameters
        {
            get => _requiredParameters ?? (_requiredParameters = new List<Inputs.RequiredParameterArgs>());
            set => _requiredParameters = value;
        }

        /// <summary>
        /// The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).
        /// </summary>
        [Input("target")]
        public Input<Inputs.TargetArgs>? Target { get; set; }

        public RouteArgs()
        {
        }
        public static new RouteArgs Empty => new RouteArgs();
    }
}
